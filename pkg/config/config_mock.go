// Code generated by MockGen. DO NOT EDIT.
// Source: config.go
//
// Generated by this command:
//
//	mockgen -source=config.go -destination=config_mock.go -package=config
//

// Package config is a generated GoMock package.
package config

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockConfig is a mock of Config interface.
type MockConfig struct {
	ctrl     *gomock.Controller
	recorder *MockConfigMockRecorder
}

// MockConfigMockRecorder is the mock recorder for MockConfig.
type MockConfigMockRecorder struct {
	mock *MockConfig
}

// NewMockConfig creates a new mock instance.
func NewMockConfig(ctrl *gomock.Controller) *MockConfig {
	mock := &MockConfig{ctrl: ctrl}
	mock.recorder = &MockConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConfig) EXPECT() *MockConfigMockRecorder {
	return m.recorder
}

// DeleteValue mocks base method.
func (m *MockConfig) DeleteValue(arg0 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteValue", arg0)
}

// DeleteValue indicates an expected call of DeleteValue.
func (mr *MockConfigMockRecorder) DeleteValue(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteValue", reflect.TypeOf((*MockConfig)(nil).DeleteValue), arg0)
}

// GetValue mocks base method.
func (m *MockConfig) GetValue(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetValue", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetValue indicates an expected call of GetValue.
func (mr *MockConfigMockRecorder) GetValue(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetValue", reflect.TypeOf((*MockConfig)(nil).GetValue), arg0)
}

// InitConfig mocks base method.
func (m *MockConfig) InitConfig() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitConfig")
	ret0, _ := ret[0].(error)
	return ret0
}

// InitConfig indicates an expected call of InitConfig.
func (mr *MockConfigMockRecorder) InitConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitConfig", reflect.TypeOf((*MockConfig)(nil).InitConfig))
}

// SetValue mocks base method.
func (m *MockConfig) SetValue(arg0 string, arg1 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetValue", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetValue indicates an expected call of SetValue.
func (mr *MockConfigMockRecorder) SetValue(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetValue", reflect.TypeOf((*MockConfig)(nil).SetValue), arg0, arg1)
}

// WriteConfig mocks base method.
func (m *MockConfig) WriteConfig() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteConfig")
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteConfig indicates an expected call of WriteConfig.
func (mr *MockConfigMockRecorder) WriteConfig() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteConfig", reflect.TypeOf((*MockConfig)(nil).WriteConfig))
}
