// Code generated by MockGen. DO NOT EDIT.
// Source: show.go
//
// Generated by this command:
//
//	mockgen -source=show.go -destination=show_mock.go -package=command
//

// Package command is a generated GoMock package.
package command

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockShowCommand is a mock of ShowCommand interface.
type MockShowCommand struct {
	ctrl     *gomock.Controller
	recorder *MockShowCommandMockRecorder
}

// MockShowCommandMockRecorder is the mock recorder for MockShowCommand.
type MockShowCommandMockRecorder struct {
	mock *MockShowCommand
}

// NewMockShowCommand creates a new mock instance.
func NewMockShowCommand(ctrl *gomock.Controller) *MockShowCommand {
	mock := &MockShowCommand{ctrl: ctrl}
	mock.recorder = &MockShowCommandMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShowCommand) EXPECT() *MockShowCommandMockRecorder {
	return m.recorder
}

// ShowImpairments mocks base method.
func (m *MockShowCommand) ShowImpairments() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShowImpairments")
	ret0, _ := ret[0].(error)
	return ret0
}

// ShowImpairments indicates an expected call of ShowImpairments.
func (mr *MockShowCommandMockRecorder) ShowImpairments() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShowImpairments", reflect.TypeOf((*MockShowCommand)(nil).ShowImpairments))
}
